
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include "EventEmitters.h"

namespace facebook {
namespace react {

void RTNContextMenuEventEmitter::onPress(OnPress event) const {
    dispatchEvent("press", [event = std::move(event)](jsi::Runtime &runtime) {
        auto payload = jsi::Object(runtime);
        payload.setProperty(runtime, "index", event.index);

        auto indexPath = jsi::Array(runtime, event.indexPath.size());
        size_t indexPathIndex = 0;
        for (auto indexPathValue : event.indexPath) {
            indexPath.setValueAtIndex(runtime, indexPathIndex++, indexPathValue);
        }
        payload.setProperty(runtime, "indexPath", indexPath);
        payload.setProperty(runtime, "name", event.name);
        return payload;
    });
}
void RTNContextMenuEventEmitter::onPreviewPress(OnPreviewPress event) const {
    dispatchEvent("previewPress", [](jsi::Runtime &runtime) {
        auto payload = jsi::Object(runtime);

        return payload;
    });
}
void RTNContextMenuEventEmitter::onCancel(OnCancel event) const {
    dispatchEvent("cancel", [](jsi::Runtime &runtime) {
        auto payload = jsi::Object(runtime);
        return payload;
    });
}

void RTNContextMenuEventEmitter::onContextMenuClick() const {
    dispatchEvent("onContextMenuClick", [](jsi::Runtime &runtime) {
        auto payload = jsi::Object(runtime);
        return payload;
    });
}

} // namespace react
} // namespace facebook
